/*
**  ComponentJS -- Component System for JavaScript <http://componentjs.com>
**  Copyright (c) 2009-2016 Ralf S. Engelschall <http://engelschall.com>
**
**  This Source Code Form is subject to the terms of the Mozilla Public
**  License (MPL), version 2.0. If a copy of the MPL was not distributed
**  with this file, You can obtain one at http://mozilla.org/MPL/2.0/.
*/
/*
 *  This is a small ComponentJS plugin which allows one to easily
 *  migrate one or more components from their current parent component
 *  to a new common parent component.
 */
/* global ComponentJS: false */
/* eslint no-unused-vars: 0 */
/* jshint unused: false */
ComponentJS.plugin("migrate",function(a,b,c){/*  define the extra trait for components  */
var d=b.trait({protos:{/*  migrate a component  */
migrate:function(){/*  determine parameters  */
var c=b.params("migrate",arguments,{comps:{pos:"...",req:!0},sync:{def:!1},completed:{def:b.nop}}),d=0,e=this;a.foreach(c.comps,function(a){if(c.sync){/*  migrate synchronously  */
var b=a.state();a.state({state:"created",sync:!0}),a.detach(),a.attach(e),a.state(b)}else/*  migrate asynchronously  */
!function(a,b){a.state({state:"created",sync:!1,callback:function(){this.detach(),this.attach(e),this.state({state:b,sync:!1,callback:function(){d--,0===d&&c.completed.call(null)}})}})}(a,a.state()),d++})}}});/*  mixin this trait to all components  */
a.latch("ComponentJS:bootstrap:comp:mixin",function(a){a.push(d)})});