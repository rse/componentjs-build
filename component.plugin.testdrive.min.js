/*
**  ComponentJS -- Component System for JavaScript <http://componentjs.com>
**  Copyright (c) 2009-2016 Ralf S. Engelschall <http://engelschall.com>
**
**  This Source Code Form is subject to the terms of the Mozilla Public
**  License (MPL), version 2.0. If a copy of the MPL was not distributed
**  with this file, You can obtain one at http://mozilla.org/MPL/2.0/.
*/
/*
 *  This is a ComponentJS plugin which provides a Promise-based
 *  environment for test-driving a ComponentJS application based on a
 *  set of use-cases.
 */
/* global ComponentJS: false */
/* eslint no-unused-vars: 0 */
/* jshint unused: false */
ComponentJS.plugin("testdrive",function(a,b,c){/*  internal store of usecases  */
var d={};/*  global API function: define/undefine a usecase  */
b.usecase=function(){/*  determine parameters  */
var c=b.params("usecase",arguments,{name:{pos:0,req:!0,valid:"string"},desc:{pos:1,req:!0,valid:"string"},conf:{def:{},valid:"object"},func:{pos:2,req:!0,valid:"(function|null)"}});/*  remember or delete usecase  */
if(null===c.func)delete d[c.name];else{if(a.isdefined(d[c.name]))throw a.exception("usecase",'usecase of name "'+c.name+'" already defined');d[c.name]={desc:c.desc,conf:c.conf,func:c.func}}},/*  global API function: show suite of usecases one can drive  */
b.suite=function(){/*  sanity check run-time environment  */
var e=c.jQuery||c.$;if("function"!=typeof e)throw new Error("testdrive#suite() requires jQuery");/*  the common CSS prefix (should be unique and not in conflict with the SPA classes!)  */
var f="ComponentJS-testdrive-suite",g=e("body > ."+f);0===g.length&&(g=e('<div class="'+f+'"><div class="'+f+'-head"><b>ComponentJS</b> Test-Drive Use-Cases Suite<div class="'+f+'-head-close">close</div></div><div class="'+f+'-list"></div></div>'),g.hide(),e("body").append(g));/*  determine sizes  */
var h=e(c).width(),i=h/10*8,j=400,k=function(a){e(g).show().animate({top:0},300,"swing",a)},l=function(a){e(g).animate({top:-j},300,"swing",function(){e(g).hide(),e(g).remove(),"function"==typeof a&&a()})};/*  allow one to close on subsequent call  */
if(e("body > ."+f).filter(":visible").length>0)return void l();/*  style the UI panel  */
g.width(i).height(j).css("box-sizing","content-box").css("top",-j).css("left",h/2-i/2).css("position","absolute").css("z-index",1e4).css("background-color","#f8f8f8").css("-webkit-box-shadow","0 4px 16px 0 #909090").css("box-shadow","0 4px 16px 0 #909090").css("-webkit-border-radius","0 0 8px 8px").css("border-radius","0 0 8px 8px").css("color","#000000").css("font-family","sans-serif").css("font-size","11pt"),/*  style the UI head  */
e("."+f+"-head",g).width(i-20).height(20).css("box-sizing","content-box").css("position","relative").css("background","#666666").css("background","-moz-linear-gradient(top, #666666 0%, #333333 49%, #222222 51%, #000000 100%)").css("background","-webkit-linear-gradient(top, #666666 0% ,#333333 49% ,#222222 51%, #000000 100%)").css("background","linear-gradient(to bottom, #666666 0%, #333333 49%, #222222 51%, #000000 100%)").css("color","#ffffff").css("padding","7px 10px 7px 10px").css("font-size","16px"),e("."+f+"-head-close",g).css("position","absolute").css("right","10px").css("top","6px").css("padding","4px 10px 4px 10px").css("font-size","12px").css("color","#c0c0c0").css("border","1px solid #606060").css("cursor","pointer"),/*  style the UI list  */
e("."+f+"-list",g).width(i).height(j-30).css("overflow","scroll").css("overflow-x","hidden");/*  generate the UI list content  */
var m=e("<table></table>");m.append('<tr class="'+f+'-list-row-first"><td class="'+f+'-list-name">Identifier</td><td class="'+f+'-list-desc">Description</td></tr>');var n=0;a.foreach(a.keysof(d).sort(),function(a){m.append('<tr data-id="'+a+'" class="'+f+"-list-row "+f+"-list-row-"+n++%2+'"><td class="'+f+'-list-name">'+a+'</td><td class="'+f+'-list-desc">'+d[a].desc+"</td></tr>")}),e("."+f+"-list",g).html(m),/*  style the UI list content  */
e("."+f+"-list table",g).width(i).css("border-collapse","collapse"),e("."+f+"-list-row",g).css("cursor","pointer"),e("."+f+"-list-row-first",g).width(i).css("background-color","#909090").css("color","#f0f0f0"),e("."+f+"-list-row-1",g).width(i).css("background-color","#f0f0f0"),e("."+f+"-list-name",g).css("padding","2px 10px 2px 10px").css("font-family","monospace").css("white-space","nowrap"),e("."+f+"-list-desc",g).width("100%").css("padding","2px 10px 2px 10px"),/*  attach event handler to list items  */
e("."+f+"-list-row",g).on("click",function(a){/*  support tr/td as target  */
var c=a.target;"tr"!==e(c).prop("tagName")&&(c=e(c).parent());/*  fetch usecase id  */
var d=e(c).data("id");"string"==typeof d&&""!==d&&/*  close UI and execute usecase  */
l(function(){b.drive(d).then(null,function(a){/* global alert: true */
/* eslint no-alert: 0 */
alert('ComponentJS: testdrive: use case "" failed: '+a)})})}),/*  attach event handler to close button  */
e("."+f+"-head-close",g).on("click",l),/*  initially open the UI  */
k()},/*  global API function: Promises/A+ compliant promise  */
b.promise=function(){var a={exports:{}};/* --- END VERBATIM EMBEDDING ---- */
/* eslint no-use-before-define: 0 */
/* eslint space-infix-ops: 0 */
/* --- START VERBATIM EMBEDDING ---- */
/*
    **  Thenable -- Embeddable Minimum Strictly-Compliant Promises/A+ 1.1.1 Thenable
    **  Copyright (c) 2013-2016 Ralf S. Engelschall <http://engelschall.com>
    **  Licensed under The MIT License <http://opensource.org/licenses/MIT>
    **  Source-Code distributed on <http://github.com/rse/thenable>
    */
/*  Universal Module Definition (UMD)  */
return function(b,c,d){/* global define: false */
/* global module: false */
"function"==typeof define&&"undefined"!=typeof define.amd?/*  AMD environment  */
define(c,function(){return d(b)}):"object"==typeof a&&"object"==typeof a.exports?/*  CommonJS environment  */
a.exports=d(b):/*  Browser environment  */
b[c]=function(){var a=b[c],e=d(b);return e.noConflict=function(){return b[c]=a,e},e}()}(this,"Thenable",function(){/*  promise states [Promises/A+ 2.1]  */
var a=0,b=1,c=2,d=function(b){/*  optionally support non-constructor/plain-function call  */
/*  optionally support non-constructor/plain-function call  */
/*  initialize object  */
/*  initial state  */
/*  initial value  */
/*  [Promises/A+ 1.3, 2.1.2.2]  */
/*  initial reason */
/*  [Promises/A+ 1.5, 2.1.3.2]  */
/*  initial handlers  */
/*  initial handlers  */
/*  provide optional information-hiding proxy  */
/*  support optional executor function  */
return this instanceof d?(this.id="Thenable/1.0.7",this.state=a,this.fulfillValue=void 0,this.rejectReason=void 0,this.onFulfilled=[],this.onRejected=[],this.proxy={then:this.then.bind(this)},void("function"==typeof b&&b.call(this,this.fulfill.bind(this),this.reject.bind(this)))):new d(b)},e=function(a,b,c){/* global process: true */
/* global setImmediate: true */
/* global setTimeout: true */
/*  short-circuit processing  */
if(0!==a[b].length){/*  iterate over all handlers, exactly once  */
var d=a[b];a[b]=[];/*  [Promises/A+ 2.2.2.3, 2.2.3.3]  */
var e=function(){for(var a=0;a<d.length;a++)d[a](c)};/*  execute procedure asynchronously  */
/*  [Promises/A+ 2.2.4, 3.1]  */
"object"==typeof process&&"function"==typeof process.nextTick?process.nextTick(e):"function"==typeof setImmediate?setImmediate(e):setTimeout(e,0)}},f=function(a){a.state===b?e(a,"onFulfilled",a.fulfillValue):a.state===c&&e(a,"onRejected",a.rejectReason)},g=function(b,c,d,e){/*  [Promises/A+ 2.1.2.1, 2.1.3.1]  */
/*  [Promises/A+ 2.1.2.2, 2.1.3.2]  */
return b.state===a&&(b.state=c,b[d]=e,f(b)),b},h=function(a,b){/*  sanity check arguments  */
/*  [Promises/A+ 2.3.1]  */
if(a===b||a.proxy===b)return void a.reject(new TypeError("cannot resolve promise with itself"));/*  surgically check for a "then" method
                (mainly to just call the "getter" of "then" only once)  */
var c;if("object"==typeof b&&null!==b||"function"==typeof b)try{c=b.then}/*  [Promises/A+ 2.3.3.1, 3.5]  */
catch(b){/*  [Promises/A+ 2.3.3.2]  */
return void a.reject(b)}/*  handle own Thenables    [Promises/A+ 2.3.2]
                and similar "thenables" [Promises/A+ 2.3.3]  */
if("function"!=typeof c)/*  handle other values  */
a.fulfill(b);else{var d=!1;try{/*  call retrieved "then" method */
/*  [Promises/A+ 2.3.3.3]  */
c.call(b,/*  resolvePromise  */
/*  [Promises/A+ 2.3.3.3.1]  */
function(c){d||(d=!0,/*  [Promises/A+ 2.3.3.3.3]  */
c===b?/*  [Promises/A+ 3.6]  */
a.reject(new TypeError("circular thenable chain")):h(a,c))},/*  rejectPromise  */
/*  [Promises/A+ 2.3.3.3.2]  */
function(b){d||(d=!0,/*  [Promises/A+ 2.3.3.3.3]  */
a.reject(b))})}catch(b){d||/*  [Promises/A+ 2.3.3.3.3]  */
a.reject(b)}}},i=function(a,b,c){return function(d){if("function"!=typeof a)/*  [Promises/A+ 2.2.1, 2.2.7.3, 2.2.7.4]  */
b[c].call(b,d);else{var e;try{e=a(d)}/*  [Promises/A+ 2.2.2.1, 2.2.3.1, 2.2.5, 3.2]  */
catch(a){/*  [Promises/A+ 2.2.7.2]  */
return void b.reject(a)}h(b,e)}}};/*  export API  */
/*  promise API methods  */
return d.prototype={/*  promise resolving methods  */
fulfill:function(a){return g(this,b,"fulfillValue",a)},reject:function(a){return g(this,c,"rejectReason",a)},/*  "The then Method" [Promises/A+ 1.1, 1.2, 2.2]  */
then:function(a,b){var c=this,e=new d;/*  [Promises/A+ 2.2.7]  */
/*  [Promises/A+ 2.2.2/2.2.6]  */
/*  [Promises/A+ 2.2.3/2.2.6]  */
return c.onFulfilled.push(i(a,e,"fulfill")),c.onRejected.push(i(b,e,"reject")),f(c),e.proxy}},d}),a.exports}(),/*  global API function: execute a usecase  */
b.drive=function(){/* global setTimeout: false */
/* global clearTimeout: false */
/*  determine parameters  */
var c=b.params("drive",arguments,{name:{pos:0,req:!0,valid:"string"},conf:{pos:1,def:{},valid:"object"},timeout:{pos:2,def:1e4,valid:"number"}}),e=d[c.name];if(!a.isdefined(e))throw a.exception("drive",'invalid usecase name "'+c.name+'"');/*  create promise  */
var f=new b.promise,g=f.proxy,h=!1,i=null;c.timeout>0&&(i=setTimeout(function(){i=null,h||(/*  reject promise because of timeout  */
h=!0,b.debug(1,'drive: usecase "'+c.name+'", TIMEOUT after '+c.timeout+" ms"),f.reject(new Error('usecase "'+c.name+'": timeout')))},c.timeout));/*  determine configuration  */
var j={};a.extend(j,e.conf),a.extend(j,c.conf),/*  execute usecase  */
b.debug(1,'drive: usecase "'+c.name+'" ('+d[c.name].desc+"), EXECUTING"+(a.keysof(c.conf).length>0?" with configuration "+a.json(c.conf):"")+(c.timeout>0?" and timeout of "+c.timeout+" ms":""));var k;try{k=e.func.apply(j,[j])}catch(a){h||(/*  reject promise because of exception  */
h=!0,b.debug(1,'drive: usecase "'+c.name+'", EXCEPTION: '+a.message),f.reject(new Error('usecase "'+c.name+'": '+a.message)))}/*  return response promise  */
/*  clear still pending timer  */
/*  in case of no errors and no timeout, handle promise response  */
/*  fulfill our response promise  */
/*  replace our response promise with the given one  */
/*  log the regular reject of the promise, too  */
return null!==i&&(clearTimeout(i),i=null),h||("object"!=typeof k&&"function"!=typeof k||"function"!=typeof k.then?f.fulfill(!0):g=k),g=g.then(null,function(a){return b.debug(1,'drive: usecase "'+c.name+'" failed: '+a),a})},/*  global API function: ensure a state to occur  */
b.ensure=function(){/*  determine parameters  */
var a=b.params("ensure",arguments,{path:{pos:0,req:!0,valid:"string"},state:{pos:1,req:!0,valid:"string"},min:{def:!0,valid:"boolean"},max:{def:!1,valid:"boolean"},sync:{def:!1,valid:"boolean"}}),c=new b.promise,d=b(a.path);/*  return promise  */
return d.state({state:a.state,min:a.min,max:a.max,sync:a.sync,func:function(a){c.fulfill(d)}}),c.proxy};/*  list of currently awaited scenarios  */
var e=[],f=function(c,d,f){var g;/*  if a component was created, refresh all component lookups
            which previously resolved to the "none" component, in the hope
            they now resolve to the new component  */
if(a.states.length<=1)throw a.exception("await(internal)","no user-defined component states");if(d===a.states[1].state&&"enter"===f)for(g=0;g<e.length;g++)e[g].comp===a.none&&(e[g].comp=b(e[g].path));/*  iterate over all awaiting situations...  */
for(g=0;"undefined"!=typeof e[g];)if(e[g].comp===c&&e[g].state===d&&e[g].direction===f){/*  asynchronously fulfill all promises and remove entry from awaited situations  */
for(var h=0;h<e[g].promises.length;h++)!function(b,c){/* global setTimeout: false */
setTimeout(a.hook("ComponentJS:settimeout:func","pass",function(){b.fulfill(c)}),0)}(e[g].promises[h],c);e.splice(g,1)}else g++;/* if a component was destroyed, it will soon no longer be
           attached to the component tree, so change its lookup back to
           "none" in all remaining awaiting situations  */
if(d===a.states[1].state&&"leave"===f)for(g=0;g<e.length;g++)e[g].comp===c&&(e[g].comp=a.none)};/*  global API function: await a particular state to occur  */
b.await=function(c,d,g){/*  determine parameters  */
var h=b.params("await",arguments,{path:{pos:0,req:!0,valid:"string"},state:{pos:1,req:!0,valid:"string"},direction:{pos:2,def:"enter",valid:"string"}});/*  sanity check state  */
if(a.states.length<=1)throw a.exception("await","no user-defined component states");var i=a.state_name2idx(h.state);if(i===-1)throw a.exception("await",'invalid state name "'+h.state+'": no such state defined');/*  sanity check direction  */
if(!h.direction.match(/^(?:enter|leave)$/))throw a.exception("await",'invalid direction "'+h.direction+'"');/*  create new promise  */
var j,k=new b.promise;for(j=0;j<e.length&&(e[j].path!==h.path||e[j].state!==h.state||e[j].direction!==h.direction);j++);j===e.length&&(e[j]={path:h.path,comp:b(h.path),state:h.state,direction:h.direction,promises:[]}),e[j].promises.push(k);/*  at least once check current situation  */
var l=e[j].comp;/*  return (proxied) promise  */
return l!==a.none&&f(l,l.state(),"enter"),k.proxy},/*  hook into the core functionality  */
a.latch("ComponentJS:bootstrap",function(){a.latch("ComponentJS:comp-created",function(b){if(a.states.length<=1)throw a.exception("await(internal)","no user-defined component states");f(b,a.states[1].state,"enter")}),a.latch("ComponentJS:comp-destroyed",function(b){if(a.states.length<=1)throw a.exception("await(internal)","no user-defined component states");f(b,a.states[1].state,"leave")}),a.latch("ComponentJS:state-enter",function(a,b){f(a,b,"enter")}),a.latch("ComponentJS:state-leave",function(a,b){f(a,b,"leave")})}),/*  global API function: promise-based polling  */
b.poll=function(){/*  determine parameters  */
var a=b.params("poll",arguments,{check:{pos:0,req:!0,valid:"function"},wait:{pos:1,def:100,valid:"(function|number)"},max:{pos:2,def:600,valid:"number"}});/*  optionally on-the-fly provide waiting-promise  */
"number"==typeof a.wait&&(a.wait=function(a){return function(){return b.sleep(a)}}(a.wait));/*  create promise around a polling loop  */
var c=a.check,d=a.wait,e=a.max;return new b.promise(function(a,b){var f=function(){e--<=0?b():c()?a():d().then(f)};f()})},/*  global API function: promise-based sleeping  */
b.sleep=function(){/*  determine parameters  */
var a=b.params("sleep",arguments,{ms:{pos:0,req:!0,valid:"number"}});/*  create promise around setTimeout  */
return new b.promise(function(b,c){/* global setTimeout: false */
setTimeout(function(){b()},a.ms)})},/*  global API function: promise-based jQuery#one() with additional DOM mutation support  */
b.once=function(){/*  determine parameters  */
var a=b.params("once",arguments,{selector:{pos:0,req:!0,valid:"any"},events:{pos:1,req:!0,valid:"string"},subselector:{pos:2,def:null,valid:"(string|null)"}}),d=c.jQuery||c.$;if("function"!=typeof d)throw new Error("testdrive#once() requires jQuery");/*  create promise  */
var e=new b.promise;/*  one-time bind to the DOM event  */
if("mutation"===a.events){if("function"!=typeof c.MutationObserver)throw new Error("once: MutationObserver not available");if(null!==a.subselector)throw new Error("once: mutation event does not support sub-selector");var f=d(a.selector);if(0===f.length)throw new Error("once: no nodes found");if(1!==f.length)throw new Error("once: more than exactly one node found");var g=new c.MutationObserver(function(a){g.disconnect(),e.fulfill(a)});g.observe(f.get(0),{attributes:!0,characterData:!0,childList:!0,subtree:!1})}else d(a.selector).one(a.events,a.subselector,function(a){e.fulfill(a)});/*  return promise  */
return e.proxy}});